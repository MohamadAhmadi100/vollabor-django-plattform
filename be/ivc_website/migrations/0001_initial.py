# Generated by Django 3.2.4 on 2021-10-23 17:33

import ckeditor.fields
import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AreaReason',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.TextField()),
                ('type', models.CharField(choices=[('accept', 'accept'), ('reject', 'reject'), ('add', 'add'), ('remove', 'remove')], max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(default='course_default.jpg', upload_to='archive/document_images/')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('document_file', models.FileField(upload_to='archive/documents/')),
            ],
        ),
        migrations.CreateModel(
            name='IndustrialArea',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area', models.CharField(max_length=200)),
                ('confirmed', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['area'],
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', ckeditor.fields.RichTextField(null=True)),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('link_url', models.URLField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Title')),
                ('project_type', models.CharField(choices=[('Industrial', 'Industrial'), ('Research', 'Research'), ('Competition', 'Competition')], default='Research', max_length=12)),
                ('status', models.CharField(choices=[('New', 'New'), ('Pending', 'Pending'), ('Ongoing', 'Ongoing'), ('On Hold', 'On Hold'), ('Done', 'Done'), ('Deleted', 'Deleted'), ('Rejected', 'Rejected'), ('Waiting For Signature', 'Waiting For Signature'), ('Inspecting', 'Inspecting'), ('Inspecting Signature', 'Inspecting Signature')], default='Inspecting', max_length=30, verbose_name='Status')),
                ('is_urgent', models.BooleanField(default=False)),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='End Date')),
                ('date_added', models.DateTimeField(default=django.utils.timezone.now)),
                ('description', models.TextField(default='', verbose_name='Description')),
                ('project_equipments', models.TextField(blank=True, null=True, verbose_name='Project Equipments')),
                ('project_requirements', models.TextField(blank=True, null=True, verbose_name='Project Requirements')),
                ('conference_url', models.URLField(blank=True, null=True, verbose_name='Conference URL')),
                ('journal_url', models.URLField(blank=True, null=True, verbose_name='Journal URL')),
                ('code_url', models.URLField(blank=True, null=True, verbose_name='Code URL')),
                ('is_valid', models.BooleanField(default=False)),
                ('agent_permission', models.BooleanField(default=False)),
                ('slack_workspace_address', models.URLField(blank=True, null=True)),
                ('slack_channel_address', models.URLField(blank=True, null=True)),
                ('google_drive_address', models.URLField(blank=True, null=True)),
                ('skype_address', models.URLField(blank=True, null=True)),
                ('supervisor_message', models.TextField(blank=True, help_text="It's optional", null=True)),
                ('week_day', models.CharField(blank=True, choices=[('Monday', 'Monday'), ('Tuesday', 'Tuesday'), ('Wednesday', 'Wednesday'), ('Thursday', 'Thursday'), ('Friday', 'Friday'), ('Saturday', 'Saturday'), ('Sunday', 'Sunday')], max_length=15, null=True)),
                ('meeting_time', models.TimeField(blank=True, null=True)),
                ('meeting_timezone', models.CharField(blank=True, max_length=200, null=True)),
                ('meeting_link', models.URLField(blank=True, null=True)),
                ('meeting_language', models.CharField(default='Farsi', max_length=50)),
                ('project_information', models.FileField(blank=True, null=True, upload_to='project_information/', verbose_name='Project Information (Optional)')),
                ('reject_reason', models.TextField(blank=True, null=True)),
                ('expert_is_accepted', models.BooleanField(default=False)),
                ('step', models.IntegerField(default=0)),
                ('fund', models.DecimalField(decimal_places=2, default=0.0, max_digits=11)),
                ('project_class', models.CharField(choices=[('Golden', 'Golden'), ('Silver', 'Silver'), ('Bronze', 'Bronze'), ('Normal', 'Normal')], default='Normal', max_length=6)),
                ('final_comment', models.TextField(blank=True, null=True)),
                ('project_value', models.DecimalField(decimal_places=2, default=0.0, max_digits=11)),
                ('project_rfp', models.FileField(null=True, upload_to='project_RFP/', verbose_name='RFP (Request For Proposal)')),
                ('agent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='project_related_agent', to=settings.AUTH_USER_MODEL)),
                ('expert', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='project_expert', to=settings.AUTH_USER_MODEL)),
                ('main_supervisor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='project_main_supervisor', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='project_related_owner', to=settings.AUTH_USER_MODEL, verbose_name='Requester')),
            ],
            options={
                'ordering': ['-date_added'],
            },
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(default='course_default.jpg', upload_to='archive/video_images/')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('youtube_url', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='Visitor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.CharField(max_length=50)),
                ('visit_date', models.DateField(default=datetime.date.today)),
            ],
        ),
        migrations.CreateModel(
            name='ProjectSupervisor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[('Pending', 'Pending'), ('Accepted Pending', 'Accepted Pending'), ('Waiting for Technical Manager Acceptance', 'Waiting for Technical Manager Acceptance'), ('Waiting for Research Director Acceptance', 'Waiting for Research Director Acceptance'), ('Waiting For Acceptance', 'Waiting For Acceptance'), ('Waiting For Signature', 'Waiting For Signature'), ('Inspecting Signature', 'Inspecting Signature'), ('Idle', 'Idle'), ('Collaborator', 'Collaborator')], default='Pending', max_length=200, null=True)),
                ('tasks', models.TextField(blank=True, null=True)),
                ('priority', models.IntegerField(default=0)),
                ('is_email_sent', models.BooleanField(default=False)),
                ('accept_reason', models.TextField(blank=True, null=True)),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='ivc_website.project')),
                ('supervisor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['priority'],
            },
        ),
        migrations.CreateModel(
            name='ProjectProposal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('proposal_file', models.FileField(default='Contract.pdf', help_text='It should be in PDF format', upload_to='contracts/')),
                ('is_spam', models.BooleanField(default=False)),
                ('project_class', models.CharField(choices=[('Golden', 'Golden'), ('Silver', 'Silver'), ('Bronze', 'Bronze'), ('Normal', 'Normal')], default='Normal', max_length=6)),
                ('project_supervisor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='ivc_website.projectsupervisor', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProjectNotification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification', models.CharField(max_length=200)),
                ('notification_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('collaborator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ivc_website.project')),
            ],
            options={
                'ordering': ['-notification_date'],
            },
        ),
        migrations.CreateModel(
            name='ProjectMentor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[('Pending', 'Pending'), ('Accepted Pending', 'Accepted Pending'), ('Waiting for Technical Manager Acceptance', 'Waiting for Technical Manager Acceptance'), ('Waiting for Research Director Acceptance', 'Waiting for Research Director Acceptance'), ('Waiting For Acceptance', 'Waiting For Acceptance'), ('Waiting For Signature', 'Waiting For Signature'), ('Inspecting Signature', 'Inspecting Signature'), ('Idle', 'Idle'), ('Collaborator', 'Collaborator')], default='Pending', max_length=200, null=True)),
                ('priority', models.IntegerField(default=0)),
                ('tasks', models.TextField(blank=True, null=True)),
                ('is_email_sent', models.BooleanField(default=False)),
                ('mentor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='project_mentor_mentor', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='ivc_website.project')),
                ('project_supervisor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='project_mentor_supervisor', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['priority'],
            },
        ),
        migrations.CreateModel(
            name='ProjectMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[('Pending', 'Pending'), ('Accepted Pending', 'Accepted Pending'), ('Waiting for Technical Manager Acceptance', 'Waiting for Technical Manager Acceptance'), ('Waiting for Research Director Acceptance', 'Waiting for Research Director Acceptance'), ('Waiting For Acceptance', 'Waiting For Acceptance'), ('Waiting For Signature', 'Waiting For Signature'), ('Inspecting Signature', 'Inspecting Signature'), ('Idle', 'Idle'), ('Collaborator', 'Collaborator')], default='Pending', max_length=200, null=True)),
                ('priority', models.IntegerField(default=0)),
                ('tasks', models.TextField(blank=True, null=True)),
                ('is_email_sent', models.BooleanField(default=False)),
                ('member', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='project_member_member', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='ivc_website.project')),
                ('project_mentor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='project_member_mentor', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['priority'],
            },
        ),
        migrations.CreateModel(
            name='ProjectLearner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[('Pending', 'Pending'), ('Accepted Pending', 'Accepted Pending'), ('Waiting for Technical Manager Acceptance', 'Waiting for Technical Manager Acceptance'), ('Waiting for Research Director Acceptance', 'Waiting for Research Director Acceptance'), ('Waiting For Acceptance', 'Waiting For Acceptance'), ('Waiting For Signature', 'Waiting For Signature'), ('Inspecting Signature', 'Inspecting Signature'), ('Idle', 'Idle'), ('Collaborator', 'Collaborator')], default='Pending', max_length=200, null=True)),
                ('priority', models.IntegerField(default=0)),
                ('tasks', models.TextField(blank=True, null=True)),
                ('is_email_sent', models.BooleanField(default=False)),
                ('learner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='project_learner_learner', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='ivc_website.project')),
                ('project_mentor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='project_learner_mentor', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['priority'],
            },
        ),
        migrations.CreateModel(
            name='ProjectContractReply',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contract_file', models.FileField(help_text='It should be in PDF format', upload_to='contracts/')),
                ('contract_type', models.CharField(choices=[('Collaborator', 'Collaborator'), ('Ownership', 'Ownership')], default='Collaborator', max_length=15)),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='ivc_website.project')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProjectContract',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contract_type', models.CharField(choices=[('Collaborator', 'Collaborator'), ('Ownership', 'Ownership')], default='Collaborator', max_length=15)),
                ('contract_file', models.FileField(default='Contract.pdf', help_text='It should be in PDF format', upload_to='contracts/')),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('reply_has_been_sent', models.BooleanField(default=False)),
                ('valid', models.BooleanField(default=True)),
                ('ready_to_be_printed', models.BooleanField(default=False)),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='ivc_website.project')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProjectAreaOpinion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area', models.CharField(max_length=200, null=True)),
                ('action', models.CharField(choices=[('accept', 'accept'), ('reject', 'reject'), ('add', 'add'), ('remove', 'remove')], max_length=50, null=True)),
                ('reason', models.TextField()),
                ('opinion_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ivc_website.project')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-opinion_date'],
            },
        ),
        migrations.CreateModel(
            name='ProjectArea',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True, null=True)),
                ('is_confirmed', models.BooleanField(default=True)),
                ('action', models.CharField(blank=True, choices=[('add', 'add'), ('remove', 'remove')], max_length=6, null=True)),
                ('area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ivc_website.industrialarea')),
                ('expert', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ivc_website.project')),
            ],
        ),
        migrations.CreateModel(
            name='NewsManager',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
