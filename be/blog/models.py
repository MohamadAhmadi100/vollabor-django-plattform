from django.contrib.auth.models import Userfrom django.db import modelsfrom django.utils import timezonefrom ckeditor.fields import RichTextFieldfrom ivc_website.models import NewsManagerclass CategoryManager(models.Manager):    def active(self):        return self.filter(status=True)class ArticelManager(models.Manager):    def published(self):        return self.filter(status='p')class Category(models.Model):    title = models.CharField(max_length=200)    slug = models.SlugField(max_length=100, unique=True)    status = models.BooleanField(default=True)    def __str__(self):        return self.title        objects = CategoryManager()class Article(models.Model):    NEWS_STATUS = (        ('d', 'Draft'),        ('p', 'Publish'),        ('i', 'Investigation'),        ('b', 'Back'),    )    author = models.ForeignKey(NewsManager, null=True, on_delete=models.SET_NULL)    title = models.CharField(max_length=200, null=False, blank=False)    slug = models.SlugField(max_length=100, unique=True)    category = models.ManyToManyField(Category, related_name="post")    description = models.TextField(max_length=100000,null=True, blank=False)    thumbnail = models.ImageField(upload_to="blog_images", verbose_name="Image", null=True)    date = models.DateField(default=timezone.now, null=True)    created = models.DateTimeField(auto_now_add=True)    updated = models.DateTimeField(auto_now=True)    status = models.CharField(max_length=1, choices=NEWS_STATUS, null=True)    is_top = models.BooleanField(default=False)    suggest_time = models.IntegerField()        counter=models.IntegerField(null=True,default=0)    def __str__(self):        return self.title    def category_to_str(self):        return ", ".join([category.title for category in self.category.active()])    category_to_str.short_description = "Category"    class Meta:        ordering = ['-created']        objects = ArticelManager()    